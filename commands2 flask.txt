# to run flask app using flask run we have to set environment variables
'''
from flask import Flask
app = Flask(__name__)

@app.route("/")
def hello():
	return "<h1> Welcome </h1>"
'''
set FLASK_APP=flaskapp.py		#this is python file name where above code is written
set FLASK_DEBUG=1			# this is used to immediately reflect changes in website as we make it code.

# set these in activat.bat file/ directly by export but in later we have to set these everytime.
# to set env variable in python venv, set it in venv\Scripts\activate.bat if using cmd or if 
# using bash set it in venv/Scripts/activate
# set these environment variables and type command 'flask run'

#we can also give two routes to a single function like
@app.route("/")
def hello():
	return "<h1> Welcome </h1>"

#We can write the whole html code in return but it would be cumbersome so we use render_template
from flask import Flask,render_template
app = Flask(__name__)

@app.route('/')
@app.route('/check')
def hello():
    return "hello"

@app.route('/about')
def about():
    return render_template('home.html')  # home.html file should be inside 'templates' folder

if __name__=='__main__':
    app.run(debug=True)

------------------------
>home.html
<!DOCTYPE html>
<html>
<head>
    <title>"welcome to page from render template</title>
</head>
<body>
    <head>"hello from html"</head>
</body>
</html>

----
in html code is written using {%  code %}, to use variable values in text like head/p use {{variable}}
---------------------


# using new packages redirect and url_for
from flask import Flask,render_template,redirect,url_for

app = Flask(__name__)

# nothing in home page

@app.route('/submit/<int:marks>')       # this will allow you to enter a number in this url and get output accordingly
def hello(marks):
    if marks>50:
        return redirect(url_for('success',score=marks)) # redirect to pass page, observe that function name is passed not url(pass)
    else:
        return redirect(url_for('fail',score=marks))    # this will redirect to fail page
    

@app.route('/pass/<int:score>')
def success(score):
    return f"According to score you entered:{score} you have passed"

@app.route('/fail/<int:score>')
def fail(score):
    return f"According to score you entered:{score} you have failed"

--------------------------------------




# to work with a form: python code
from flask import Flask,render_template,redirect,url_for,request

app = Flask(__name__)

@app.route('/')
def home():
    return render_template('index.html')


@app.route('/submit/<int:marks>')       # this will allow you to enter a number in this url and get output accordingly
def submit(marks):
    if marks>50:
        return redirect(url_for('success',score=marks)) # redirect to pass page, observe that function name is passed not url(pass)
    else:
        return redirect(url_for('fail',score=marks))    # this will redirect to fail page
    

@app.route('/pass/<int:score>')
def success(score):
    return f"According to your score:{score} you have passed"

@app.route('/fail/<int:score>')
def fail(score):
    return f"According to your score:{score} you have failed"

@app.route('/check',methods=['POST','GET'])
def check():
    if request.method=='POST':
        maths = float(request.form['maths'])        # maths is given inside 'name' tag in html file 
        science = float(request.form['science'])
        total_score = maths+science
    
    return redirect(url_for('submit',marks=total_score))


if __name__=='__main__':
    app.run(debug=True)
----------
#index.html for above code

<html>
    <h1>Welcome</h1>
    <h2> Please enter your marks to know your result</h2>
    <form action='/check' method="post">
        <label for="maths">Maths:</label>
        <input type="text" id="maths" name='maths' value="0"</input>
        <label for="science">Science:</label>
        <input type="text" id="science" name="science" value="0"></input><br>  # <br> is used to get to new line
        <input type="submit" id="submit"></input>
    </form>
</html>

-------------------------------------------------------------------------
#Using jinja framework tools to write code in html

from flask import Flask,render_template,redirect,url_for,request

app = Flask(__name__)

@app.route('/')
def home():
    return render_template('index.html')


@app.route('/submit/<int:marks>')       # this will allow you to enter a number in this url and get output accordingly
def submit(marks):
    return render_template('output.html',variable=marks)


@app.route('/checkfor')
def checkfor():
    diction={'name':'Amit','Age':26}
    return render_template('checkfor.html',variable=diction)


@app.route('/check',methods=['POST','GET'])
def check():
    if request.method=='POST':
        maths = float(request.form['maths'])        # maths is given inside 'name' tag in html file 
        science = float(request.form['science'])
        total_score = maths+science
    
    return redirect(url_for('submit',marks=total_score))

    

if __name__=='__main__':
    app.run(debug=True)
-----------<checkfor.html>-------------
<html>
    <h1>Welcome! this is to demonstrate for loops</h1>
    {% for key,value in variable.items() %}
    <table border=2>
    <tr>
        <th>{{ key }}</th>
        <th>{{ value }}</th>
    </tr>
    {% endfor %}
    </table>
</html>
--------------<output.html>-------------------------------------------
<html>
    <h1>This is the result for your score</h1>
    {% if variable>50 %}
    <h2>Congratulations! you have passed with score {{variable}}</h2> {# double brackets bring the value passed in render template #}
    {% else %}
    <h2>Sorry you have failed with score {{variable}}</h2>
    {% endif %}
    {# everything written inside bracket and a hash are comments #}
</html>
-------------------------------------------------



# 	Basic website with slider using html,css and js integration without flask/jinja #
-----------------<index.html>---------------------------
<!DOCTYPE html>
<html>
    <head>
        <link rel="stylesheet" href="styles.css">
        <script src="myscript.js"></script>

    </head>
    <h1>Welcome</h1>
    <h2> Please enter your marks to know your result</h2>
    
    <form action='/check' method="post">
        <label for="maths">Maths:</label>
        <input type="text" id="maths" name='maths' value="0"></input>
        <label for="science">Science:</label>
        <input type="text" id="science" name="science" value="0"></input><br><br>

        <div class="slidecontainer" >
            <label for="language">Language: </label>
            <span id="slider_value2" style="color:rgb(7, 7, 7);font-weight:bold;"></span><br>
            <input type="button" value="-" onClick="subtract_one()">
            0<input type="range" min="0" max="1000" step="1" id="myrange" name="language" value=477" onchange="show_value2(this.value)">100
        <input type="button" value="+" onClick="add_one()">
        </div><br><br>
        
        <input type="submit" id="submit"></input>
    </form>
</html>



--------------------------<myscript.js>------------------------------------
function show_value2(x)
{
 document.getElementById("slider_value2").innerHTML=x;
}
function add_one()
{
    document.getElementById("myrange").value =parseInt(document.getElementById("myrange").value)+1;
  show_value2(document.getElementById("myrange").value);
}
function subtract_one()
{
    document.getElementById("myrange").value =parseInt(document.getElementById("myrange").value)-1;
    show_value2(document.getElementById("myrange").value);
}


-------------------------<style.css>--------------------------------
h1 {
  
        background-color: powderblue;
      
}

--------------To integrate with flask(jinja)------------------------------------------------------
this is the only change we have to make in index.html file

<head>
        <link rel="stylesheet" href={{ url_for('static',filename='styles.css') }}>
        <script type=text/javascript src={{ url_for('static',filename='myscript.js') }}></script>

</head>